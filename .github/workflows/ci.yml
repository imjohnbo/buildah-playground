on:
  push

name: CI

env:
  CR_PAT: ${{ secrets.CR_PAT }}

jobs:
  build-push-ghcr:
    name: Build and push to GitHub Container Registry
    runs-on: ubuntu-latest
    container: 
      image: quay.io/buildah/stable
      options: --security-opt seccomp=/usr/share/containers/seccomp.json --privileged
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          buildah bud \
            --squash -t \
            ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA .

      - name: Push to GHCR
        run: |
          buildah push \
            --creds=$GITHUB_ACTOR:$CR_PAT \
            ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA

  test:
    name: Test optimization
    runs-on: ubuntu-latest
    needs: build-push-ghcr
    container: 
      image: quay.io/podman/stable
      options: --security-opt seccomp=/usr/share/containers/seccomp.json --privileged
    steps:
      - uses: actions/checkout@v2
      - name: Run Dive
        run: |
          curl -L https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.tar.gz > dive.tar.gz

          tar -xvf dive.tar.gz

          podman pull \
            --creds=$GITHUB_ACTOR:$CR_PAT \
            ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
          
          ./dive podman://ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA

  push-prod:
    name: Push image to prod
    runs-on: ubuntu-latest
    needs: test
    container: 
      image: quay.io/skopeo/stable
      options: --security-opt seccomp=/usr/share/containers/seccomp.json --privileged
    steps:
      - uses: actions/checkout@v2
      - name: Test
        env:
          AZ_LOGIN: ${{ secrets.az_login }}
          AZ_PASSWORD: ${{ secrets.az_password }}
        run: |
          skopeo copy \
            --src-creds=$GITHUB_ACTOR:$CR_PAT \
            --dest-creds=$AZ_LOGIN:$AZ_PASSWORD \
            ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA \
            octozenregistry.azurecr.io/$GITHUB_REPOSITORY:latest



    

